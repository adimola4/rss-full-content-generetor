[{"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/index.js":"1","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/App.js":"2","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/reportWebVitals.js":"3","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/RssList.js":"4","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/NewRss.js":"5","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/RssCard.js":"6","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/context/Modal.js":"7","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/Modal.js":"8","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/ToastProvider.js":"9","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/ToastContainer.js":"10","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/Toast.js":"11","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/hooks/useInterval.js":"12","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/ReadyModal.js":"13"},{"size":593,"mtime":1613798790463,"results":"14","hashOfConfig":"15"},{"size":1651,"mtime":1614270183812,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1612371786797,"results":"17","hashOfConfig":"15"},{"size":5010,"mtime":1615567537409,"results":"18","hashOfConfig":"15"},{"size":1332,"mtime":1615001135106,"results":"19","hashOfConfig":"15"},{"size":1288,"mtime":1615900330653,"results":"20","hashOfConfig":"15"},{"size":434,"mtime":1615900389031,"results":"21","hashOfConfig":"15"},{"size":468,"mtime":1615900243576,"results":"22","hashOfConfig":"15"},{"size":997,"mtime":1615899198601,"results":"23","hashOfConfig":"15"},{"size":725,"mtime":1615899188695,"results":"24","hashOfConfig":"15"},{"size":10204,"mtime":1615001489223,"results":"25","hashOfConfig":"15"},{"size":412,"mtime":1615900414234,"results":"26","hashOfConfig":"15"},{"size":1576,"mtime":1615900315289,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"lelyy7",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/index.js",[],["60","61"],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/App.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/reportWebVitals.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/RssList.js",["62","63"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport NewRss from './NewRss';\nimport RssCard from './RssCard';\nimport Modal from './Modal';\n import ReadyModal from './ReadyModal';\nimport { useToast } from \"./ToastProvider\";\nimport   useInterval  from '../hooks/useInterval';\n\nconst qs = require('qs');\n\n\n\n\nconst RssList = props => {\n  const { addToast } = useToast();\n  const [rsslist, setRsslist] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const [rssUrl, setRssUrl] = useState({});\n  const [rss, setRss] = useState({});\n  const [generatedRss, setGeneratedRss] = useState({url:'',id:''});\n  const [loading, setLoading ] = useState(false);\n  const [delay, setDelay] = useState(null);\n\n    useEffect(() => {\n\n      const loadRss = async () => {\n        let response = {};\n        try {\n          response = await axios.get('/api/v1/rss.json')\n          .then(res =>{\n            setRsslist(res.data)\n          } )\n        } catch (err) {\n            console.log(\"err\", err)\n            console.log(response)\n        }\n      }\n      loadRss()\n      }, []);\n    useInterval(() =>{\n      axios.post(`/api/v1/rss/ready/`,qs.stringify({rss:{id:generatedRss.id}}))\n      .then(result =>{\n        console.log(result);  \n        console.log(result.data[0].generated_url);\n        if(result.data[0].generated_url !== undefined){\n          //addToast(result.data[0].generated_url,toast_type);\n           setRssUrl(result.data[0].generated_url)\n           setTimeout(() =>  setShowModal(true), 1500)\n           setDelay(null) \n          // setTimeout(()=> window.location.reload() , 100000) \n        }           \n      }\n      )\n    }, delay)\n    const initialRss = {\n        url:'',\n      };\n\n    const add_rss = rss => {\n        console.log(rss);\n        setLoading(true);\n       \n        setRssUrl(rss.url)\n       // setTimeout(() =>  setShowModal(true), 3000)\n       let toast_type = \"INFO\"\n       \n        function generated_url_ready(id, toast_type) {\n        \n        axios.post(`/api/v1/rss/ready/`,qs.stringify({rss:{id:id}}))\n          .then(result =>{\n            console.log(result);  \n            console.log(result.data[0].generated_url);\n            if(result.data[0].generated_url !== undefined){\n              //addToast(result.data[0].generated_url,toast_type);\n              // setTimeout(() =>  setShowModal(true), 1500)\n              // setTimeout(()=> window.location.reload() , 100000) \n            }           \n          }\n          )\n        }\n      \n        axios.post('/api/v1/rss', qs.stringify(\n            {\n              rss:{\n                original_url: rss.url\n              }\n            }))\n            .then(res=>{\n              console.log(res.data);\n              toast_type = \"Created\"\n              if(res.status === 201)              \n              {\n                let id = \"\";\n                if(res.data.id){\n                  id = res.data.id;\n                  let rss = [\n                    res.data.title,\n                    res.data.generated_url,\n                    res.data.img_url,\n                    res.data.description\n                  ]\n                  setTimeout(()=>addToast(rss,toast_type),2500);  \n                  \n                  setGeneratedRss({\n                    ...generatedRss,\n                    id: id\n                  });\n                  setRss(rss)\n                  setDelay(1000)                \n                }\n                \n                \n                \n\n                \n              }else {\n                // console.log(res.data[1]);\n                // setTimeout(() =>  setShowModal(true), 1500)\n                toast_type =\"Exiest\"\n                // generated_url_ready( res.data[1].id, toast_type)\n                let rss = [\n                  res.data[1].title,\n                  res.data[1].generated_url,\n                  res.data[1].img_url,\n                  res.data[1].description\n                ]\n                addToast(rss,toast_type);\n                setRss(rss)\n              }\n              setRsslist([...rsslist, res]);\n            } )\n            .catch( error => {\n              toast_type = \"Error\"\n              addToast( \"We unable to complete your request, try anthor RSS URL.\",toast_type);\n            } )\n       \n      };\n\n    \n\n  \n\n\n  return (\n      <div>\n          <NewRss add_rss={add_rss} initialRssState={initialRss}/>\n          <hr className=\"hr\"></hr>\n           { showModal && (\n            <Modal onClose={() => setShowModal(false)}>\n              <ReadyModal  rssData={rss} generated_url={rssUrl}/>\n            </Modal>\n          )} \n          <div className=\"rss-list\">\n              {rsslist.map((rss, index) => (\n                // <li className=\"cards_item\" key={index}>\n                //     {rss.title} | {rss.original_url} \n                       <RssCard  initialRssState={rss} key={index}></RssCard>\n                // </li>\n            ))}\n        </div>\n    \n      </div>\n  )\n};\nexport default RssList;","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/NewRss.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/RssCard.js",["64"],"import React, { useState } from 'react';\n\nconst RssCard = ({initialRssState,}) => {\n    \n    \n    const [rss, setRss] = useState(initialRssState);\n\n    \n    return (\n          <div className=\"rss-card\" id={\"rss-\"+rss.id}>\n                <div className=\"rss-card-title\">\n                  <a href= {rss.url}>\n                    <img src={rss.img_url} className=\"rss-card-avatar lazy\" data-src={rss.img_url} alt=\"\" />\n                  </a>\n                    <a href={rss.url }>\n                    {rss.title}</a>\n                </div>\n                <p className=\"rss-card-desc\">\n                   { rss.description }\n                </p>\n               \n                <button className=\"rss-card-btn\" onClick={ navigator.clipboard.writeText(\"https://\" + rss.generated_url)}>click to copy</button>\n\n                {/* <div class=\"toggle checkcross cont-bef-aft \">\n                    <input id=\"checkcross<%= rss.id %>\" type=\"checkbox\" name=\"check\" class=\"cont-bef-aft checkcrosss \" value=\"false\"/>\n                    <label class=\"toggle-item cont-bef-aft\" for=\"checkcross<%= rss.id %>\">\n                        <div class=\"check cont-bef-aft\"></div>\n                    </label>\n                </div> */}\n          </div>\n       \n           \n    )\n};\nexport default RssCard;","/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/context/Modal.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/Modal.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/ToastProvider.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/ToastContainer.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/Toast.js",["65"],"import React, { useEffect, useState } from \"react\";\nimport { useToast } from \"./ToastProvider\";\nimport { animated } from \"react-spring\";\n\n\n\n\nconst Toast = ({ children, id, toast_type, data } ) => {\n  const { removeToast } = useToast();\n  const [type, setType] = useState(toast_type);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      removeToast(id);\n    }, 100000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [id, removeToast]);\n\n  const handleremove = () =>{\n    removeToast(id);\n  }\n\n  return (\n\n     <>\n        {(() => {\n  \n           switch (type) {\n              case 'Created':\n                  return (\n                      \n                    <animated.div className = 'toast toast-green' >                     \n                        <div className=\"toast_icon\">\n                                <svg version=\"1.1\" className=\"toast_svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"  space=\"preserve\">\n                                    <g><g><path d=\"M504.502,75.496c-9.997-9.998-26.205-9.998-36.204,0L161.594,382.203L43.702,264.311c-9.997-9.998-26.205-9.997-36.204,0    c-9.998,9.997-9.998,26.205,0,36.203l135.994,135.992c9.994,9.997,26.214,9.99,36.204,0L504.502,111.7    C514.5,101.703,514.499,85.494,504.502,75.496z\"></path>\n                                </g></g>\n                                </svg>\n                            </div>\n                            <div className=\"toast_content\">\n                                <p className=\"toast_type\">Success!</p>\n                                <p className=\"toast_message\" >We finish to check your url working hard to generet you a new URL with full content.</p>\n                            </div>\n                           \n                            <div className=\"toast_close\" onClick={ handleremove }>\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.642 15.642\" xlink=\"http://www.w3.org/1999/xlink\" enableBackground=\"new 0 0 15.642 15.642\">\n                                    <path fillRule=\"evenodd\" d=\"M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z\"></path>\n                                </svg>\n                        </div>\n                    </animated.div>\n                  )\n              case 'Exiest':\n                  return (\n                    <animated.div className = 'toast toast-green' >                    \n                            <div className=\"toast_icon\">\n                                <svg version=\"1.1\" className=\"toast_svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"  space=\"preserve\">\n                                    <g><g><path d=\"M504.502,75.496c-9.997-9.998-26.205-9.998-36.204,0L161.594,382.203L43.702,264.311c-9.997-9.998-26.205-9.997-36.204,0    c-9.998,9.997-9.998,26.205,0,36.203l135.994,135.992c9.994,9.997,26.214,9.99,36.204,0L504.502,111.7    C514.5,101.703,514.499,85.494,504.502,75.496z\"></path>\n                                </g></g>\n                                </svg>\n                            </div>\n                            <div className=\"toast_content\">\n                                <p className=\"toast_type\">We found This RSS that match to your URL!</p>\n                                <p className=\"toast_message\" onClick={ navigator.clipboard.writeText(data[1])}>Click here to copy URL</p>\n                            </div>\n                            <div className=\"toast_svg_copy\" onClick={ navigator.clipboard.writeText(data[1])}>\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"toast_svg\" xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" x=\"0px\" y=\"0px\" viewBox=\"0 0 15.642 15.642\" enableBackground=\"new 0 0 15.642 15.642\" space=\"preserve\">\n                                    <g><g><path d=\"M920,902.5v-595c0-4.7-1.7-8.8-5.2-12.3c-3.5-3.5-7.6-5.2-12.3-5.2h-595c-4.7,0-8.8,1.7-12.3,5.2s-5.2,7.6-5.2,12.3v595c0,4.7,1.7,8.8,5.2,12.3c3.5,3.5,7.6,5.2,12.3,5.2h595c4.7,0,8.8-1.7,12.3-5.2C918.3,911.3,920,907.2,920,902.5z M990,307.5v595c0,24.1-8.6,44.7-25.7,61.8c-17.1,17.1-37.7,25.7-61.8,25.7h-595c-24.1,0-44.7-8.6-61.8-25.7c-17.1-17.1-25.7-37.7-25.7-61.8v-595c0-24.1,8.6-44.7,25.7-61.8c17.1-17.1,37.7-25.7,61.8-25.7h595c24.1,0,44.7,8.6,61.8,25.7C981.4,262.8,990,283.4,990,307.5z M780,97.5V185h-70V97.5c0-4.7-1.7-8.8-5.2-12.3s-7.6-5.2-12.3-5.2h-595c-4.7,0-8.8,1.7-12.3,5.2S80,92.8,80,97.5v595c0,4.7,1.7,8.8,5.2,12.3c3.5,3.5,7.6,5.2,12.3,5.2H185v70H97.5c-24.1,0-44.7-8.6-61.8-25.7C18.6,737.2,10,716.6,10,692.5v-595c0-24.1,8.6-44.7,25.7-61.8C52.8,18.6,73.4,10,97.5,10h595c24.1,0,44.7,8.6,61.8,25.7C771.4,52.8,780,73.4,780,97.5L780,97.5z\"/></g></g>\n                                </svg> \n                            </div>\n                            <div className=\"toast_close\" onClick={ handleremove }>\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.642 15.642\" xlink=\"http://www.w3.org/1999/xlink\" enableBackground=\"new 0 0 15.642 15.642\">\n                                    <path fillRule=\"evenodd\" d=\"M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z\"></path>\n                                </svg>\n                            </div>\n                    </animated.div> \n                  )\n              case 'Info':\n                    return (\n                    <animated.div className = 'toast {{status}}' >\n                       <div className=\"toast_icon\">\n                                <svg version=\"1.1\" className=\"toast_svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 512 512\"  space=\"preserve\">\n                                    <g><g><path d=\"M504.502,75.496c-9.997-9.998-26.205-9.998-36.204,0L161.594,382.203L43.702,264.311c-9.997-9.998-26.205-9.997-36.204,0    c-9.998,9.997-9.998,26.205,0,36.203l135.994,135.992c9.994,9.997,26.214,9.99,36.204,0L504.502,111.7    C514.5,101.703,514.499,85.494,504.502,75.496z\"></path>\n                                </g></g>\n                                </svg>\n                            </div>\n                            <div className=\"toast_content\">\n                                <p className=\"toast_type\">We found This RSS that match to your URL!</p>\n                                <p className=\"toast_message\" onClick={ navigator.clipboard.writeText(data[1])}>Click here to copy URL</p>\n                            </div>\n                            <div className=\"toast_close\" onClick={ handleremove }>\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.642 15.642\" xlink=\"http://www.w3.org/1999/xlink\" enableBackground=\"new 0 0 15.642 15.642\">\n                                    <path fillRule=\"evenodd\" d=\"M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z\"></path>\n                                </svg>\n                            </div>\n                    </animated.div>\n                    )\n              case 'Error':\n                  return (\n                    <animated.div className = 'toast toast-red' >\n                        <div className=\"toast_icon\">\n                        <svg version=\"1.1\" className=\"toast__svg\" xmlns=\"http://www.w3.org/2000/svg\" xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 301.691 301.691\"  space=\"preserve\">\n                            <g>\n                                <polygon points=\"119.151,0 129.6,218.406 172.06,218.406 182.54,0  \"></polygon>\n                                <rect x=\"130.563\" y=\"261.168\" width=\"40.525\" height=\"40.523\"></rect>\n                            </g>\n                        </svg>                                \n                            </div>\n                            <div className=\"toast_content\">\n                            <p className=\"toast_type\">{data}</p>\n                                \n                            </div>\n                            <div className=\"toast_close\" onClick={ handleremove }>\n                                <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 15.642 15.642\" xlink=\"http://www.w3.org/1999/xlink\" enableBackground=\"new 0 0 15.642 15.642\">\n                                    <path fillRule=\"evenodd\" d=\"M8.882,7.821l6.541-6.541c0.293-0.293,0.293-0.768,0-1.061  c-0.293-0.293-0.768-0.293-1.061,0L7.821,6.76L1.28,0.22c-0.293-0.293-0.768-0.293-1.061,0c-0.293,0.293-0.293,0.768,0,1.061  l6.541,6.541L0.22,14.362c-0.293,0.293-0.293,0.768,0,1.061c0.147,0.146,0.338,0.22,0.53,0.22s0.384-0.073,0.53-0.22l6.541-6.541  l6.541,6.541c0.147,0.146,0.338,0.22,0.53,0.22c0.192,0,0.384-0.073,0.53-0.22c0.293-0.293,0.293-0.768,0-1.061L8.882,7.821z\"></path>\n                                </svg>\n                        </div>\n                    </animated.div>\n                )\n              default:\n                  return (\n                    <div></div>\n                  )\n           }\n  \n        })()}\n    </>\n  );\n};\n\nexport default Toast;\n",["66","67"],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/hooks/useInterval.js",[],"/Users/adimola/Projects/Ruby/rss-full-content-generetor/client/src/components/ReadyModal.js",["68"],"import React, { useState } from 'react';\n\n\nconst ReadyModal = ({ rssData, generated_url }) => {\n    \n    \n    const [rss, setRss] = useState(rssData);\n   \n    \n    return (\n        <>\n          \n                { rss && \n                    <div className=\"notify-card\" >\n                            <div className=\"notify-card-title\">\n                                <a href= {rss[1]}>\n                                    <img src={rss[2]} className=\"notify-card-avatar lazy\" data-src={rss[2]} alt=\"\" />\n                                </a>\n                                    <a href={rss[2] }>\n                                    {rss[0]}</a>\n                            </div>\n                            <div className=\"notify-card-body\">\n                                 <p className=\"notify-card-desc\">\n                                { rss }\n                                </p >\n                             </div> \n                             <div className=\"notify-card-footer\"> \n                                <a href={generated_url} className=\"notify-card-btn btn-left\" onClick={()=>navigator.clipboard.writeText(\"https://\"+generated_url)}> RSS file </a>\n                                <button  className=\"notify-card-btn btn-right\" onClick= {()=> navigator.clipboard.writeText(\"https://\"+generated_url)} > Copy link! </button>\n                             </div>\n                                \n                    \n                      </div>            \n                }\n                \n       \n        </>           \n    )\n};\nexport default ReadyModal;",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":23,"column":10,"nodeType":"75","messageId":"76","endLine":23,"endColumn":17},{"ruleId":"73","severity":1,"message":"77","line":69,"column":18,"nodeType":"75","messageId":"76","endLine":69,"endColumn":37},{"ruleId":"73","severity":1,"message":"78","line":6,"column":17,"nodeType":"75","messageId":"76","endLine":6,"endColumn":23},{"ruleId":"73","severity":1,"message":"79","line":10,"column":16,"nodeType":"75","messageId":"76","endLine":10,"endColumn":23},{"ruleId":"69","replacedBy":"80"},{"ruleId":"71","replacedBy":"81"},{"ruleId":"73","severity":1,"message":"78","line":7,"column":17,"nodeType":"75","messageId":"76","endLine":7,"endColumn":23},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","'generated_url_ready' is defined but never used.","'setRss' is assigned a value but never used.","'setType' is assigned a value but never used.",["82"],["83"],"no-global-assign","no-unsafe-negation"]